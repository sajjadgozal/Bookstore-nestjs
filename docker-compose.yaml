version: '3.1'

services:

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_container
    restart: always
    ports:
      - '${API_PORT}:${API_PORT}'
    environment:
      - API_PORT=${API_PORT}
      - DB_HOST=${DB_HOST}
      - DB_DRIVER=${DB_DRIVER}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=${SECRET_KEY}
    networks:
      - main_network
    depends_on:
      - postgres

  postgres:
    image: postgres
    restart: always
    container_name: postgres_container
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '${DB_PORT}:5432'
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    networks:
            - main_network
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin_container
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    ports:
      - '5050:80'
    depends_on:
      - postgres

networks:
  main_network:
    driver: bridge

volumes:
    pg_data:
        driver: local